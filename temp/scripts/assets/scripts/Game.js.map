{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "starPrefab",
    "default",
    "type",
    "Prefab",
    "maxStarDuration",
    "minStarDuration",
    "ground",
    "Node",
    "player",
    "scoreDisplay",
    "Label",
    "scoreAudio",
    "url",
    "AudioClip",
    "onLoad",
    "groundY",
    "y",
    "height",
    "timer",
    "starDuration",
    "spawnNewStar",
    "score",
    "newStar",
    "instantiate",
    "node",
    "addChild",
    "setPosition",
    "getNewStarPosition",
    "getComponent",
    "game",
    "random0To1",
    "randX",
    "randY",
    "jumpHeight",
    "maxX",
    "width",
    "randomMinus1To1",
    "p",
    "update",
    "dt",
    "gameOver",
    "gainScore",
    "string",
    "toString",
    "audioEngine",
    "playEffect",
    "stopAllActions",
    "director",
    "loadScene"
  ],
  "mappings": ";;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAW;AACPC,qBAAS,IADF;AAEPC,kBAAMP,GAAGQ;AAFF,SAFH;;AAOR;AACAC,yBAAiB,CART;AASRC,yBAAiB,CATT;;AAWR;AACAC,gBAAO;AACHL,qBAAS,IADN;AAEHC,kBAAMP,GAAGY;AAFN,SAZC;;AAiBR;AACA;AACAC,gBAAO;AACHP,qBAAS,IADN;AAEHC,kBAAMP,GAAGY;AAFN,SAnBC;;AAwBR;AACAE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SAzBN;;AA8BR;AACAC,oBAAW;AACPV,qBAAS,IADF;AAEPW,iBAAIjB,GAAGkB;AAFA;AA/BH,KAHP;;AAwCL;AACAC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKT,MAAL,CAAYU,CAAZ,GAAgB,KAAKV,MAAL,CAAYW,MAAZ,GAAmB,CAAlD;AACA;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA;AACA,aAAKC,YAAL;AACA;AACA,aAAKC,KAAL,GAAa,CAAb;AACH,KAnDI;;AAqDLD,kBAAc,wBAAU;AACpB;AACA,YAAIE,UAAU3B,GAAG4B,WAAH,CAAe,KAAKvB,UAApB,CAAd;AACA;AACA,aAAKwB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;;AAEA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;;AAEA;AACA;AACA,aAAKV,YAAL,GAAoB,KAAKd,eAAL,GAAuBV,GAAGmC,UAAH,MAAmB,KAAK1B,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,aAAKa,KAAL,GAAa,CAAb;AACH,KApEI;;AAsELS,wBAAoB,8BAAU;AAC1B,YAAII,QAAQ,CAAZ;AACA;AACA;AACA,YAAIC,QAAQ,KAAKjB,OAAL,GAAepB,GAAGmC,UAAH,KAAkB,KAAKtB,MAAL,CAAYoB,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;AACA;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAJ,gBAAQpC,GAAGyC,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAOvC,GAAG0C,CAAH,CAAKN,KAAL,EAAYC,KAAZ,CAAP;AACH,KAjFI;;AAmFL;AACAM,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA;AACA;AACA,YAAG,KAAKrB,KAAL,GAAa,KAAKC,YAArB,EAAkC;AAC9B,iBAAKqB,QAAL;AACA;AACH;AACD,aAAKtB,KAAL,IAAcqB,EAAd;AACH,KA7FI;;AA+FLE,eAAW,qBAAU;AACjB,aAAKpB,KAAL,IAAc,CAAd;AACA;AACA,aAAKZ,YAAL,CAAkBiC,MAAlB,GAA2B,YAAY,KAAKrB,KAAL,CAAWsB,QAAX,EAAvC;AACA;AACAhD,WAAGiD,WAAH,CAAeC,UAAf,CAA0B,KAAKlC,UAA/B,EAA2C,KAA3C;AACH,KArGI;;AAuGL6B,cAAU,oBAAU;AAChB,aAAKhC,MAAL,CAAYsC,cAAZ,GADgB,CACc;AAC9BnD,WAAGoD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH;AA1GI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //this property quotes the PreFab resource os stars\r\n        starPrefab:{\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        \r\n        //the random scale of disappearing time for stars\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        \r\n        //ground node for confirming the height of the generated star's position\r\n        ground:{\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        \r\n        //player node for obtaining the jump height of the main character and \r\n        //controlling the movement switch of the main character\r\n        player:{\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        \r\n        //quotation of score label\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        \r\n        //scoring sound effect\r\n        scoreAudio:{\r\n            default: null,\r\n            url:cc.AudioClip\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        //obtain the anchor point of ground level on the y axis\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        //initialize timer\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        //generate a new star\r\n        this.spawnNewStar();\r\n        //initialize scoring\r\n        this.score = 0;\r\n    },\r\n    \r\n    spawnNewStar: function(){\r\n        //generate a new node in the scene with a preset template\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        //put the newly added node under the Canvas node\r\n        this.node.addChild(newStar);\r\n        //set up a random position for the star\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        \r\n        // deliver the concrete example of the Game component into the star component\r\n        newStar.getComponent('Star').game = this;\r\n        \r\n        //reset timer, randomly choose a value according to the scale of\r\n        //star duration\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n    \r\n    getNewStarPosition: function(){\r\n        var randX = 0;\r\n        //accprding to the position of the ground level and the main character's jump\r\n        //height, randomly obtain an anchor point of the star on the y axis\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\r\n        //according to the width of the screen, randomly obtain an anchor point of\r\n        //star on the x axis\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        //return to the anchor point of the star\r\n        return cc.p(randX, randY);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        //update timer for each frame, when a new star is not generated\r\n        //after exceding duration\r\n        //invoke the logic of a game failure\r\n        if(this.timer > this.starDuration){\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    \r\n    gainScore: function(){\r\n        this.score += 1;\r\n        //update the words of the scoreDisplay Label\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        //play the scoring sound effect\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n    \r\n    gameOver: function(){\r\n        this.player.stopAllActions(); //stop the jumping action of the player node\r\n        cc.director.loadScene('game');\r\n    }\r\n});\r\n"
  ]
}